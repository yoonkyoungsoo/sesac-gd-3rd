.container {
  /* flex 기본 용어 */
  /* 주축: main axis */
  /* 교자축:cross-axis */

  /* display: flex;는 자식 요소의 정렬 방법을 지정하는 속성 */
  /* display: inline-flex; 속성도 있음 */
  /* flex와 inline-flex의 차이  */
  /* flex는 부모 요소가 수직으로 쌓임 bloxk 요소처럼 */
  /* inline-flex는 부모 요소가 수평으로 쌓임 inline요소처럼 */
  /* display: flex;는 기본적으로 자식 요소들이 왼쪽에서 오른쪽으로 쌓임 */
  /* 즉, 주축의 기본 방향이 좌 ->우 */

  display: flex;
  width: 100vw;
  background-color: antiquewhite;
  /* flex-derection: 주축의 방향 지정 / 시작점 변경 */
  /* flex-direction: row; (default) */

  /* row recerse: 우 -> 좌측으로 자식요소들이 쌓임 */
  /* flex-direction: row-reverse; */
  /* colum: 위 -> 아래로 자식요소들이 쌓임
  flex-direction: column;

  /* colum-reverse: 아래 -> 위로 자식요소들이 쌓임 */
  /* flex-direction: column-reverse; */
  /* colum-reverse: 아래 -> 위로 자식요소들이 쌓임 */
  /* flex-direction: column-reverse; */
  /* flex-direction: row; */
  /* width: 350px; */
  /* flex 속성 사용 시 컨테이너의 너비가 아이템들의 너비보다 작을 때 줄바꿈을 지정 */
  /* flex-wrap: nowrap; (default) */
  /* flex-wrap: wrap;
  flex-wrap: wrap-reverse;
  flex-direction: column-reverse;
  height: 300px;
  width: 300px; */
  /* justify-content: 주축 item의  정렬방법 / 배치 방법*/
  /* 
  -justify-content: flex-start (default) -> 아이템을 start 지점을 기준으로 나열 
  -justify-content: flex-end -> 아이템을 end 지점을 기준으로 나열
  -justify-content: space-spacearound -> 아이템들의 모든 여백을 동일하게 갖도록 함 (양쪽 여백의 단위가 1이라면, 아이템 사이의 여백들은 2 
  -justify-content: space-evenly -> start부터 첫 아이템의 간격, 아이템 사이 간격, 마지막 아이템부터 end까지의 모든 간격이 동일
  -justify-content: space-between -> 처음과 마지막 아이템을 양 끝에 붙이고, 나머지 아이템 사이 간격을 동일하게 나눔
  */
  /* justify-content: space-evenly; */

  /* align-items: 교차축에 대해 item을 어떻게 배치할 것인가 */
  /* 
  -align-items:strech; (default)-> container의 교차축을 모두 채우기 위해 늘림 -> 아이템의 높이가 지정되지 않았을 때  자동으로 교차축을 채우기 위해 늘어남
  -align-items: flex-start; -> 교차축의 시작점으로 정렬
  -> 아이템의높이/너비가 지정되었을 때 자동으로 정렬됨
  align-items: flex-end; ->교차축의 끝점으로 정렬 
  -align-items: center; -> 교차축의 중앙에 정렬
  -align-items: baseline; ->아이템을 텍스트의 베이스라인 기준으로 정렬 
  */
  height: 500px;
  /* align-items: flex-end; */
  /* align-items: center; */
  /* align-items: baseline; */
  /* align-content -> 두 줄 이상에서 교차축 기준으로 아이템들의 정렬 방식 */
  /* 조건: flex-wrap: wrap 상태에서 아이템이 2줄 이상일 때 교차축 방향 설정 */
  /* 
  -align-content: stretch; -> 교차축 방향으로 모두 차지하기 위해 늘어남
  -align-content: flex-start ->교차축 방향으로 위로 정렬
  -align-content: flex-end ->교차축 방향으로 끝점으로 정렬
  -align-content: center -> 교차축 방향으로 중앙 정렬
  */
  width: 500px;
  /* flex-wrap: wrap; */
  /* align-content: flex-start; */
  /* align-content: flex-end; */
  /* align-content: center; */
  display: flex;
  flex-wrap: wrap;
  /* align-content: center; */
}

.container .item {
  width: 100px;
  height: 100px;
  font-size: 30px;
  text-align: center;
  line-height: 100px;
}

.container .item1 {
  /* font-size: 20px; */
  background-color: red;
}
.container .item2 {
  /* font-size: 40px; */
  background-color: orange;
}
.container .item3 {
  background-color: yellow;
}
.container .item4 {
  background-color: green;
}
.container .item5 {
  background-color: blue;
}
.container .item6 {
  background-color: blueviolet;
}
.container .item7 {
  background-color: gray;
}
.container .item8 {
  background-color: greenyellow;
}
/* 실습 */
.container1 {
  width: 500px;
  height: 500px;
  background-color: aqua;
  display: flex;
  flex-wrap: wrap;
}
.box {
  width: 100px;
  height: 100px;
  background-color: orange;
  text-align: center;
  line-height: 100px;
  /* margin: 5psx; */
}
/* 아이템 속성 */
.container2 {
  background-color: #dfdfdf;
  width: 100%;
  height: 400px;
  display: flex;
  align-items: center;
}
.container2 .item {
  /* width: 50px; */
  height: 50px;
}
.container2 .item1 {
  background-color: lightcoral;
  order: 5;
}
.container2 .item2 {
  background-color: lightsalmon;
  align-self: flex-start;
}
.container2 .item3 {
  background-color: lightyellow;
  flex-basis: 100px;
}
.container2 .item4 {
  background-color: lightgreen;
  order: 4;
  flex-grow: 1;
}
.container2 .item5 {
  background-color: lightblue;
  order: 1;
  flex-grow: 2;
}
