.img-box {
  background-color: lightblue;
  width: 400px;
  height: 250px;
}
img {
  width: 100%;
  /* 부모 너비가 400px 이므로 400px이 됨 */
  height: 100%;
  cursor: pointer;
  border: 1px solid gold;
}
img:hover {
  /* 
    1. skew()
    -원하는 각도만큼 요소를 기울임
    -x,y축 나누어 속성 부여 가능
    -skewx(x_deg)
    -skewy(y_deg)
    -x,y 축 동시에 사용 원하는 경우 
    -skew(w_deg, y_deg)
    */
  transform: skewX(30deg);
  transform: skewY(30deg);
  transform: skew(30deg, 30deg);
  /* 
2. scale()
-크기를 조절함 (확대,축소)
-1보다 큰 값: 해당 배수만큼 확대
- 0~1: 해당 배수만큼 축소를 하게 됨
*/
  transform: scaleX(2);
  transform: scaley(0.5);
  transform: scale(0.5, 2);

  /* 
3.translate ()
-요소를 이동
-trasnlatex() : x 축을 기준으로 이동
-trasnlatey() : y 축을 기준으로 이동
-trasnlatez() : z 축을 기준으로 이동
-translate() : x,y축을 기준으로 이동
*/
  transform: translateX(100px);
  transform: translateY(-100px);
  /* z축 변화는 perspective를 사용하지 않을 경우 확인 불가 */
  transform: perspective(500px) translateZ(100px);

  /* 2개일 때 단축 속성 */
  transform: translate(100px, 100px);
  transform: translate(-100px, -100px);
  /* 3개일 때 단축 속성  translate3d 사용*/
  transform: perspective(500px) translate3d(100px, 100x, 100px);
  /* 
  4.rotate()
  -회전
  -주어진 각도만큼 회전
  -rotatex(): x축을 기준으로 회전
  -rotatey(): y축을 기준으로 회전
  -rotate(): 시계 방향으로 회전
  */
  transform: rotate(45deg);
  transform: perspective(500px) rotatex(45deg);
  transform: perspective(500px) rotatey(45deg);

  transform: perspective(500px) rotatey(180deg);
  /* 뒷면 보임 여부 */
  backface-visibility: visible; /*default*/
  backface-visibility: hidden;
}
.beach-img {
  transform: rotate(50deg);
}

/* transition */
/* transition은 변화가 일어날 때 사용하는 속성 */
/* 
transition: 프로퍼티 값 변경 시, 일정 시간에 걸쳐 변화가 일어나도록 함
-transition-property: 변화 대상 css 속성을 지정 (default: all)
-transition-duration: 변화가 일어날 시간 (단위: s)
-transition-timingfunction: 변화 시간별 속도 지정 (default: ease)
-esae: 천천히 시작 -> 빨라짐 -> 느려짐
-linear: 속도 일정
-ease-in: 천천히 시작 -> 정상 속도
-ease-out: 정상 속도 -> 천천히 끝남
-ease-in-out: 천천히 시작해서 -> 정상 속도 -> 느려짐
-tramsition-delay: 지연 시간 (단위: s)

*/
.box {
  width: 100px;
  height: 100px;
  display: inline-block;
  background-color: black;
  transition: 1s;
}
.box1:hover {
  background-color: pink;
  height: 120px;
  width: 120px;
  transition-property: scale;
  transition-duration: 1s;
  transition-timing-function: ease-in;
  /* transition 단축 속성은 지속시간만 작성 가능 */
  /* property: all / timing-fuction: ease / delay : 0s가 기본으로 지정됨 */
  transition-delay: 1s;

  /* 단축 속성  */
  /* 순서 중요 */
  /* transition : property duration timing-fintion delay */
  /* transition: scale 1s ease-in 1s; */
  /* property 작성된 css 속성만 transition이 적용됨 */
  /* width, height는 호버 하자마자 변하지만 배경색은 1초 뒤에 1초 동안 ease-in 속도로 분홍색으로 변화함 */
  transition: height 1s ease-in 1s;
}

.box2:hover {
  background-color: aqua;
  /* x축 200px 이동, x축으로 2배 확대 */
  transform: translateX(200px) scaleX(2);
}
.box3:hover {
  opacity: 0;
}
